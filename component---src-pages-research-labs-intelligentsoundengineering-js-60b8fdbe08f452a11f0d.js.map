{"version":3,"file":"component---src-pages-research-labs-intelligentsoundengineering-js-60b8fdbe08f452a11f0d.js","mappings":"+HAaA,IAV4BA,IAAiD,IAAhD,KAACC,EAAI,gBAACC,EAAe,UAACC,EAAS,UAACC,GAAUJ,EACnE,OACEK,EAAAA,cAAA,OAAKD,UAAW,gCAAgCF,KAAmBE,KACjEC,EAAAA,cAAA,MAAID,UAAW,uGAAuGD,KACnHF,GAEC,C,qCC+BZ,IAtCmBK,IACf,MAAMC,EAASC,OAAOC,KAAKH,GAAOC,OAClC,OACEF,EAAAA,cAAA,OAAKD,UAAU,2BACbC,EAAAA,cAAA,OACED,UAAW,qBACTG,EAAS,EAAI,eAAiB,4BAGhCF,EAAAA,cAAA,OAAKD,UAAU,SACbC,EAAAA,cAAA,OAAKD,UAAU,iBAAiBE,EAAMI,SAGzCH,EAAS,EACRF,EAAAA,cAAA,OACED,UAAW,uBACTG,EAAS,EAAI,eAAiB,mCAGhCF,EAAAA,cAAA,OAAKD,UAAU,SACbC,EAAAA,cAAA,OAAKD,UAAU,iBAAiBE,EAAMK,eAGxCC,EACHL,EAAS,EACRF,EAAAA,cAAA,OAAKD,UAAU,sDACbC,EAAAA,cAAA,OAAKD,UAAU,SACXC,EAAAA,cAAA,OAAKD,UAAU,iBACVE,EAAMO,cAIfD,EACA,C,8FC4EZ,UA9EiBZ,IAAoB,IAAnB,YAACc,GAAYd,EAC7B,MACEe,YAAY,OAAEC,IACZF,EAEEG,GAAOC,EAAAA,EAAAA,gBAAe,cAuC1B,OACIb,EAAAA,cAACc,EAAAA,EAAM,CAACC,KAAK,WAAWJ,OAAQA,GAC5BX,EAAAA,cAAA,WAASD,UAAU,WACnBC,EAAAA,cAAA,OAAKD,UAAU,gBACXC,EAAAA,cAAA,OAAKD,UAAU,sBACXC,EAAAA,cAACgB,EAAAA,EAAmB,CAACpB,KAAK,oCAAoCC,gBAAgB,UAAUC,UAAU,YAG1GE,EAAAA,cAAA,OACCD,UAAU,UACVkB,wBAAyB,CAAEC,OAAQN,EAAKhB,KAAKuB,QAK7CP,EAAKQ,OAAOC,MAAMC,KAAKC,IAAW,IAAAC,EA9D1BC,EAPCV,EAAMW,EAbPC,EAkF0B,OACjC3B,EAAAA,cAAC4B,EAAAA,KAAI,CAACC,GAAIN,EAAYO,YAAYC,KAChC/B,EAAAA,cAAA,OACEgC,MAAM,sCACNC,IAAKV,EAAYW,IAEnBlC,EAAAA,cAACmC,EAAAA,EAAS,CACN9B,OAzFCsB,EAyF+C,QAA9BH,EAACD,EAAYO,YAAYH,aAAK,IAAAH,OAAA,EAA7BA,EAA+BY,gBAAgBC,gBAxFpFrC,EAAAA,cAAAA,EAAAA,SAAA,KACG2B,EACC3B,EAAAA,cAACsC,EAAAA,EAAW,CAACC,IAAI,mBAAmBZ,MAAOA,IAE3C3B,EAAAA,cAACwC,EAAAA,EAAW,CACVD,IAAI,0DACJE,IAAI,sCAAqCC,YAAAC,EAAA,UAmF7BrC,QA7EES,EA6EmBQ,EAAYO,YAAYf,KA7ErCW,EA6E2CH,EAAYO,YAAYJ,aA5E7E1B,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,KAAGD,UAAU,cAAcgB,GAAQ,QACnCf,EAAAA,cAAA,KAAGD,UAAU,iBAAiB2B,GAAgB,uBA2E9ClB,OAvECiB,EAuEkBF,EAAYO,YAAYL,MAvE/BzB,EAAAA,cAAA,KAAGD,UAAU,QAAQ0B,GAAS,cAAc,UA0ErD,KAGN,C","sources":["webpack://c4dm-website/./src/components/parallelogramHeader.js","webpack://c4dm-website/./src/components/tableCard.js","webpack://c4dm-website/./src/pages/research/labs/intelligentsoundengineering.js"],"sourcesContent":["import React from \"react\";\n\n\nconst ParallelogramHeader = ({text,backgroundColor,textColor,className}) => {\n    return (\n      <div className={`parallelogram has-background-${backgroundColor} ${className}`}>\n        <h1 className={`is-size-2-desktop is-size-3-tablet is-size-4-mobile has-text-centered has-text-weight-bold has-text-${textColor}`}>\n          {text}\n        </h1>\n      </div>\n    );\n}\n\nexport default ParallelogramHeader;","import React from \"react\";\n\nconst TableCard = (props) => {\n    const length = Object.keys(props).length;\n    return (\n      <div className=\"card table-card columns\">\n        <div\n          className={`card-image column ${\n            length > 1 ? \"is-2-desktop\" : \"is-full\" //is 2 6ths\n          } is-full-mobile`}\n        >\n          <div className=\"media\">\n            <div className=\"media-content\">{props.first}</div>\n          </div>\n        </div>\n        {length > 1 ? (\n          <div\n            className={`card-content column ${\n              length > 2 ? \"is-one-fifth\" : \"is-four-fifths\"\n            } is-full-mobile`}\n          >\n            <div className=\"media\">\n              <div className=\"media-content\">{props.second}</div>\n            </div>\n          </div>\n        ) : undefined}\n        {length > 2 ? (\n          <div className=\"card-content column is-three-fifths is-full-mobile\">\n            <div className=\"media\">\n                <div className=\"media-content\">\n                    {props.third}\n                </div>\n            </div>\n          </div>\n        ) : undefined}\n      </div>\n    );\n\n}\n\nexport default TableCard;","import \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport { Link, graphql, useStaticQuery } from \"gatsby\";\nimport { GatsbyImage, StaticImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\nimport Layout from \"../../../components/layout\";\nimport ParallelogramHeader from \"../../../components/parallelogramHeader\";\nimport TableCard from \"../../../components/tableCard\";\nimport \"../../../style/bulmacustom.scss\";\n\n// Functions to return strucutred content for table card\nconst firstColumn = (image) => (\n  <>\n    {image ? (\n      <GatsbyImage alt=\"picture of event\" image={image} />\n    ) : (\n      <StaticImage\n        alt=\"default event picture as no event picture was specified\"\n        src=\"../../../../static/defaultevent.png\"\n      />\n    )}\n  </>\n);\n\nconst secondColumn = (name, acadposition) => (          \n                  <>\n                    <p className=\"title is-4\">{name || \"Name\"}</p>\n                    <p className=\"subtitle is-7\">{acadposition || \"Academic Position\"}</p>\n                  </>\n                );\n\nconst thirdColumn = (blurb) => (<p className=\"is-3\">{blurb || \"description\"}  </p>);\n\n\nconst Research = ({pageContext}) => {\n  const {\n    breadcrumb: { crumbs },\n  } = pageContext\n\n  const data = useStaticQuery(graphql`\n  {\n    text: markdownRemark(\n      fileAbsolutePath: {regex: \"research/labs/intelligentsoundengineering.md/\"}\n    ) {\n      html\n      frontmatter {\n        title\n\n      }\n    }\n\n    people: allMarkdownRemark(\n      filter: {fields: {category: {eq: \"people\"}}, frontmatter: {themes: {eq: \"audioeng\"}}}\n    ) {\n     \n        nodes {\n          id\n          frontmatter {\n            image {\n              childImageSharp {\n                gatsbyImageData(layout: CONSTRAINED, aspectRatio: 1)\n              }\n            }\n            name\n            role\n            url\n            acadposition\n            blurb\n            themes\n            role\n          }\n        }\n      \n    }\n    \n  }\n  `);\n\n    return (\n        <Layout name=\"AudioEng\" crumbs={crumbs}>\n            <section className=\"section\">\n            <div className=\"lowerPadding\">\n                <div className=\"column is-one-half\">\n                    <ParallelogramHeader text=\"Intelligent Sound Engineering Lab\" backgroundColor=\"primary\" textColor=\"white\"/>\n                </div>\n            </div>\n            <div \n             className=\"content\"\n             dangerouslySetInnerHTML={{ __html: data.text.html }}   \n            >\n        \n            </div>\n          \n            {data.people.nodes.map((peopleentry) => (\n              <Link to={peopleentry.frontmatter.url}>\n                <div\n                  class=\"card-image row is-three-fifths pt-3\"\n                  key={peopleentry.id}\n                >\n                <TableCard \n                    first={firstColumn(peopleentry.frontmatter.image?.childImageSharp.gatsbyImageData)} \n                    second={secondColumn(peopleentry.frontmatter.name, peopleentry.frontmatter.acadposition)} \n                    third={thirdColumn(peopleentry.frontmatter.blurb)} \n                />\n                </div>\n                </Link>\n              ))}\n                </section>\n        </Layout>\n    );\n}\n\nexport default Research;\n"],"names":["_ref","text","backgroundColor","textColor","className","React","props","length","Object","keys","first","second","undefined","third","pageContext","breadcrumb","crumbs","data","useStaticQuery","Layout","name","ParallelogramHeader","dangerouslySetInnerHTML","__html","html","people","nodes","map","peopleentry","_peopleentry$frontmat","blurb","acadposition","image","Link","to","frontmatter","url","class","key","id","TableCard","childImageSharp","gatsbyImageData","GatsbyImage","alt","StaticImage","src","__imageData","require"],"sourceRoot":""}