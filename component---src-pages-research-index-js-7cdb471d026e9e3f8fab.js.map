{"version":3,"file":"component---src-pages-research-index-js-7cdb471d026e9e3f8fab.js","mappings":"mJAuEA,IAnEkBA,IAEhB,MAAMC,EAAOD,EAAMC,KACdC,GAAaC,EAAAA,cAAA,KAAGC,KAAMJ,EAAMC,MAAOC,GACnCA,GAAaC,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAIN,EAAMO,KAAO,GAAGP,EAAMO,eAAiB,uBAAwBL,GAE3F,OACEC,EAAAA,cAAA,OACEK,UAAU,uDACVC,IAAKT,EAAMO,MAEXJ,EAAAA,cAAA,OAAKK,UAAU,cACZP,EACCE,EAAAA,cAAA,UAAQK,UAAU,SACfR,EAAMU,MACLP,EAAAA,cAACQ,EAAAA,EAAW,CAACC,IAAI,mBAAmBF,MAAOV,EAAMU,QAEjDP,EAAAA,cAACU,EAAAA,EAAW,CACVD,IAAI,0DACJE,IAAI,gCAA+BC,YAAAC,EAAA,WAO3ChB,EAAMiB,MACPjB,EAAMkB,OACNlB,EAAMmB,QACNnB,EAAMoB,KACLjB,EAAAA,cAAA,OAAKK,UAAU,gEACbL,EAAAA,cAAA,OAAKK,UAAU,wBACbL,EAAAA,cAAA,OAAKK,UAAU,iBACZR,EAAMiB,KACLd,EAAAA,cAAA,KAAGK,UAAU,iBAAiBR,EAAMiB,WAClCI,EACHrB,EAAMkB,MACLf,EAAAA,cAAA,KACEK,UAAW,YACTR,EAAMsB,WAAa,IAAM,sBAG1BtB,EAAMkB,MAAO,UAEdG,EACHrB,EAAMmB,OACLhB,EAAAA,cAAA,KAAGK,UAAU,aAAY,OAAKR,EAAMmB,aAClCE,IAGRlB,EAAAA,cAAA,OAAKK,UAAU,qBACbL,EAAAA,cAAA,OACEK,UAAU,iBACVe,wBAAyB,CAAEC,OAAQxB,EAAMoB,SAG3CpB,EAAMoB,KACNjB,EAAAA,cAAA,OAAKK,UAAU,0DACVP,EAAK,mBAFGoB,QA3BLA,EAkCV,C,qCCtDV,IAV4BI,IAAiD,IAAhD,KAACC,EAAI,gBAACC,EAAe,UAACC,EAAS,UAACpB,GAAUiB,EACnE,OACEtB,EAAAA,cAAA,OAAKK,UAAW,gCAAgCmB,KAAmBnB,KACjEL,EAAAA,cAAA,MAAIK,UAAW,uGAAuGoB,KACnHF,GAEC,C,oFCuDZ,UAxDiBD,IAAoB,IAAnB,YAACI,GAAYJ,EAC7B,MACEK,YAAY,OAAEC,IACZF,EAEIG,GAAOC,EAAAA,EAAAA,gBAAe,cAoB5B,OACE9B,EAAAA,cAAC+B,EAAAA,EAAM,CAACC,KAAK,WAAWJ,OAAQA,GAC9B5B,EAAAA,cAAA,WAASK,UAAU,YACjBL,EAAAA,cAACiC,EAAAA,EAAmB,CAClBV,KAAK,WACLC,gBAAgB,UAChBC,UAAU,UAGZzB,EAAAA,cAAA,OAAKK,UAAU,iBAEfL,EAAAA,cAAA,OAAKK,UAAU,gCACZwB,EAAKK,MAAMC,MAAMC,KAAKC,GACrBrC,EAAAA,cAAA,OACEK,UAAU,2EACVC,IAAK+B,EAAKC,IAEVtC,EAAAA,cAACuC,EAAAA,EAAQ,CACPxB,MAAOsB,EAAKG,YAAYR,KACxB5B,KAAMiC,EAAKG,YAAYpC,KACvBG,MAAO8B,EAAKG,YAAYjC,MAAMkC,gBAAgBC,gBAC9CvB,YAAY,SAMf,C","sources":["webpack://c4dm-website/./src/components/blogCard.js","webpack://c4dm-website/./src/components/parallelogramHeader.js","webpack://c4dm-website/./src/pages/research/index.js"],"sourcesContent":["import { Link } from \"gatsby\";\nimport { GatsbyImage, StaticImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\n\nconst BlogCard = (props) => {\n  // define if link is internal or external\n  const link = props.link \n    ? (content) => (<a href={props.link}>{content}</a>) \n    : (content) => (<Link to={props.slug ? `${props.slug}/#header` : \"/research/projects/\"}>{content}</Link>);\n  \n  return (\n    <div\n      className=\"card is-flex is-flex-direction-column is-flex-grow-1\"\n      key={props.slug}\n    >\n      <div className=\"card-image\">\n        {link(\n          <figure className=\"image\">\n            {props.image ? (\n              <GatsbyImage alt=\"picture of event\" image={props.image} />\n            ) : (\n              <StaticImage\n                alt=\"default event picture as no event picture was specified\"\n                src=\"../../static/defaultevent.png\"\n              />\n            )}\n          </figure>\n        )}\n      </div>\n\n      {!props.date &&\n      !props.title &&\n      !props.author &&\n      !props.html ? undefined : (\n        <div className=\"card-content is-flex is-flex-direction-column is-flex-grow-1\">\n          <div className=\"media is-flex-grow-1\">\n            <div className=\"media-content\">\n              {props.date ? (\n                <p className=\"subtitle is-7\">{props.date}</p>\n              ) : undefined}\n              {props.title ? (\n                <p\n                  className={`title is-${\n                    props.largeTitle ? \"4\" : \"6\"\n                  } is-capitalized`}\n                >\n                  {props.title}{\" \"}\n                </p>\n              ) : undefined}\n              {props.author ? (\n                <p className=\"is-size-7\"> by {props.author}</p>\n              ) : undefined}\n            </div>\n          </div>\n          <div className=\"content is-size-7\">\n            <div\n              className=\"blog-card-text\"\n              dangerouslySetInnerHTML={{ __html: props.html }}\n            ></div>\n          </div>\n          {!props.html ? undefined : (\n            <div className=\"card-footer p-2 has-text-centered is-align-self-center\">\n                {link(\"Read More\")}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BlogCard;\n","import React from \"react\";\n\n\nconst ParallelogramHeader = ({text,backgroundColor,textColor,className}) => {\n    return (\n      <div className={`parallelogram has-background-${backgroundColor} ${className}`}>\n        <h1 className={`is-size-2-desktop is-size-3-tablet is-size-4-mobile has-text-centered has-text-weight-bold has-text-${textColor}`}>\n          {text}\n        </h1>\n      </div>\n    );\n}\n\nexport default ParallelogramHeader;","import React from \"react\";\nimport {graphql,useStaticQuery} from \"gatsby\";\nimport Layout from \"../../components/layout\";\nimport ParallelogramHeader from \"../../components/parallelogramHeader\";\nimport BlogCard from \"../../components/blogCard\";\nimport \"../../style/bulmacustom.scss\"\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nconst Research = ({pageContext}) => {\n  const {\n    breadcrumb: { crumbs },\n  } = pageContext\n\n    const data = useStaticQuery(graphql`\n      {\n        pages: allMarkdownRemark(\n            filter: { fields: { category: { eq: \"research/index\" } } }\n            ) {\n            nodes {\n                id\n                frontmatter {\n                name\n                slug\n                image {\n                    childImageSharp {\n                    gatsbyImageData(layout: CONSTRAINED)\n                    }\n                }\n                }\n            }\n            }\n      }\n    `);\n    return (\n      <Layout name=\"Research\" crumbs={crumbs}>\n        <section className=\"section \">\n          <ParallelogramHeader\n            text=\"Research\"\n            backgroundColor=\"primary\"\n            textColor=\"white\"\n          />\n\n          <div className=\"lowerPadding\"></div>\n\n          <div className=\"columns is-flex is-multiline\">\n            {data.pages.nodes.map((page) => (\n              <div\n                className=\"column is-one-quarter-desktop is-one-third-tablet is-full-mobile is-flex\"\n                key={page.id}\n              >\n                <BlogCard\n                  title={page.frontmatter.name}\n                  slug={page.frontmatter.slug}\n                  image={page.frontmatter.image.childImageSharp.gatsbyImageData}\n                  largeTitle={true}\n                />\n              </div>\n            ))}\n          </div>\n        </section>\n      </Layout>\n    );\n}\n\nexport default Research;"],"names":["props","link","content","React","href","Link","to","slug","className","key","image","GatsbyImage","alt","StaticImage","src","__imageData","require","date","title","author","html","undefined","largeTitle","dangerouslySetInnerHTML","__html","_ref","text","backgroundColor","textColor","pageContext","breadcrumb","crumbs","data","useStaticQuery","Layout","name","ParallelogramHeader","pages","nodes","map","page","id","BlogCard","frontmatter","childImageSharp","gatsbyImageData"],"sourceRoot":""}