{"version":3,"file":"component---src-pages-news-js-dd9970c2ddc202f1077b.js","mappings":"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","sources":["webpack://c4dm-website/./src/components/parallelogramHeader.js","webpack://c4dm-website/./src/components/tableCard.js","webpack://c4dm-website/./src/components/tagSelector.js","webpack://c4dm-website/./src/pages/news.js"],"sourcesContent":["import React from \"react\";\n\n\nconst ParallelogramHeader = ({text,backgroundColor,textColor,className}) => {\n    return (\n      <div className={`parallelogram has-background-${backgroundColor} ${className}`}>\n        <h1 className={`is-size-2-desktop is-size-3-tablet is-size-4-mobile has-text-centered has-text-weight-bold has-text-${textColor}`}>\n          {text}\n        </h1>\n      </div>\n    );\n}\n\nexport default ParallelogramHeader;","import React from \"react\";\n\nconst TableCard = (props) => {\n    const length = Object.keys(props).length;\n    return (\n      <div className=\"card table-card columns\">\n        <div\n          className={`card-image column ${\n            length > 1 ? \"is-2-desktop\" : \"is-full\" //is 2 6ths\n          } is-full-mobile`}\n        >\n          <div className=\"media\">\n            <div className=\"media-content\">{props.first}</div>\n          </div>\n        </div>\n        {length > 1 ? (\n          <div\n            className={`card-content column ${\n              length > 2 ? \"is-one-fifth\" : \"is-four-fifths\"\n            } is-full-mobile`}\n          >\n            <div className=\"media\">\n              <div className=\"media-content\">{props.second}</div>\n            </div>\n          </div>\n        ) : undefined}\n        {length > 2 ? (\n          <div className=\"card-content column is-three-fifths is-full-mobile\">\n            <div className=\"media\">\n                <div className=\"media-content\">\n                    {props.third}\n                </div>\n            </div>\n          </div>\n        ) : undefined}\n      </div>\n    );\n\n}\n\nexport default TableCard;","import React, { useEffect, useMemo, useState } from \"react\";\n\n// Custom function to apply title case without affecting existing uppercase letters\nfunction titleCaseWithoutAffectingUppercase(str) {\n    return str\n      .split(' ')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n  }\n\nconst filterData = (nodes, filter) => nodes.filter((node) => !filter ? true : node.frontmatter?.tags?.includes(filter) || node.frontmatter?.role?.includes(filter) || node.year?.includes(filter));\n\n\nconst TagSelector = ({tags,nodes,callback}) => {\n    const [selected, setSelected] = useState(false);\n\n    const memoFilter = useMemo(() => filterData(nodes,selected), [nodes,selected])\n\n    useEffect(() => {callback(memoFilter)}, [selected,filterData,memoFilter])\n\n    return (\n        <div>\n        <div className=\"buttons are-small\">\n            {tags.group.map((tag) => (\n            // If selected=='tag', then grey it out\n                <button\n                    className=\"button is-grey\"\n                    key={tag.fieldValue}\n                    onClick={() => setSelected(tag.fieldValue)}\n                    disabled={selected === tag.fieldValue}\n                >\n            {\n                // Apply titleCaseWithoutAffectingUppercase to all pages\n                titleCaseWithoutAffectingUppercase(tag.fieldValue)\n            } ({tag.totalCount})\n            </button>\n            ))}\n\n            {/* // If selected==False, then grey this out */}\n            <button \n                className=\"button\" \n                onClick={() => setSelected(false)}\n                disabled={!selected}\n            >\n                Clear Tags (x)\n            </button>\n        </div>\n        </div>\n    );\n};\n\nexport default TagSelector;\n\n// data - the data from a graphql query\n// filterTemplate â€“ the slug for the filtered template page\n// root - the slug for the unfiltered page (accessed when we clear it)","import React, {useState, useCallback} from \"react\";\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport TableCard from \"../components/tableCard\";\nimport TagSelector from \"../components/tagSelector\";\nimport ParallelogramHeader from \"../components/parallelogramHeader\";\nimport \"../style/bulmacustom.scss\"\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\n// Return structured content for table card\nconst firstColumn = (date) => <p className=\"subtitle is-6\">{date || null}</p>;\n\nconst secondColumn = (title) => (\n    <>               \n      <p className=\"title is-4\">{title || \"New Blog Entry\"} </p>\n      <div className=\"card-footer p-2 has-text-centered is-align-self-center\">\n        Read More\n      </div>\n    </>\n)\n\nconst News = ({pageContext}) => {\n\n\n\n  const {\n    breadcrumb: { crumbs },\n  } = pageContext\n\n  const data = useStaticQuery(graphql`\n  {\n    news: allMarkdownRemark(\n    filter: {fields: {category: {eq: \"news\"}}}\n    sort: {frontmatter: {date: DESC}}\n    ) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          tags\n          date(formatString: \"ddd DD MMM yy\")\n        }\n        id\n      }\n    }\n\n    allTags: allMarkdownRemark(\n          limit: 2000\n          filter: {fields: {category: {eq: \"news\"}}}\n          ) {\n          group(field: { frontmatter: { tags: SELECT }}) {\n            fieldValue\n            totalCount\n          }\n        }\n      \n    about: markdownRemark(\n        fields: { category: { eq: \"about\" } }\n        fileAbsolutePath: { regex: \"/news.md/\" }\n      ) {\n      html\n      }  \n\n  }\n  `);\n\n    const [filteredNodes, setFilteredNodes] = useState(data.news.nodes);\n\n    const getFilteredNodes = useCallback((nodes) => {\n      setFilteredNodes(nodes);\n    }, [setFilteredNodes]);\n\n  return (\n    <Layout name=\"News\" crumbs={crumbs}>\n      <section className=\"section\">\n        <ParallelogramHeader\n          text=\"News and Events\"\n          backgroundColor=\"primary\"\n          textColor=\"white\"\n          className=\"mb-6\"\n        />\n\n        <div\n          className=\"content\"\n          dangerouslySetInnerHTML={{ __html: data.about.html }}\n        ></div>\n\n        <p className=\"title is-4 pt-5\" >Latest News and Events</p>\n\n      \n        \n        <TagSelector tags={data.allTags} nodes={data.news.nodes} data={data} callback={getFilteredNodes}/>\n\n\n        {filteredNodes.map((blogentry) => (\n              <div\n                className=\"card-image row is-three-fifths pt-3\"\n                key={blogentry.id}\n              >\n                <Link to={blogentry.fields.slug}>\n                  <TableCard\n                    first={firstColumn(blogentry.frontmatter.date)}\n                    second={secondColumn(blogentry.frontmatter.title)}\n                  />\n                </Link>\n              </div>\n          )\n        )}\n      </section>\n    </Layout>\n  );\n};\n\nexport default News;"],"names":["_ref","text","backgroundColor","textColor","className","React","props","length","Object","keys","first","second","undefined","third","filterData","nodes","filter","node","_node$frontmatter","_node$frontmatter$tag","_node$frontmatter2","_node$frontmatter2$ro","_node$year","frontmatter","tags","includes","role","year","callback","selected","setSelected","useState","memoFilter","useMemo","useEffect","group","map","tag","key","fieldValue","onClick","disabled","split","word","charAt","toUpperCase","slice","join","totalCount","pageContext","breadcrumb","crumbs","data","useStaticQuery","filteredNodes","setFilteredNodes","news","getFilteredNodes","useCallback","Layout","name","ParallelogramHeader","dangerouslySetInnerHTML","__html","about","html","TagSelector","allTags","blogentry","id","Link","to","fields","slug","TableCard","date","title"],"sourceRoot":""}