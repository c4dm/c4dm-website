{"version":3,"file":"component---src-pages-partners-js-068aca622cd9ef5c8046.js","mappings":"mJAuEA,IAnEkBA,IAEhB,MAAMC,EAAOD,EAAMC,KACdC,GAAaC,EAAAA,cAAA,KAAGC,KAAMJ,EAAMC,MAAOC,GACnCA,GAAaC,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAIN,EAAMO,KAAO,GAAGP,EAAMO,eAAiB,uBAAwBL,GAE3F,OACEC,EAAAA,cAAA,OACEK,UAAU,uDACVC,IAAKT,EAAMO,MAEXJ,EAAAA,cAAA,OAAKK,UAAU,cACZP,EACCE,EAAAA,cAAA,UAAQK,UAAU,SACfR,EAAMU,MACLP,EAAAA,cAACQ,EAAAA,EAAW,CAACC,IAAI,mBAAmBF,MAAOV,EAAMU,QAEjDP,EAAAA,cAACU,EAAAA,EAAW,CACVD,IAAI,0DACJE,IAAI,gCAA+BC,YAAAC,EAAA,WAO3ChB,EAAMiB,MACPjB,EAAMkB,OACNlB,EAAMmB,QACNnB,EAAMoB,KACLjB,EAAAA,cAAA,OAAKK,UAAU,gEACbL,EAAAA,cAAA,OAAKK,UAAU,wBACbL,EAAAA,cAAA,OAAKK,UAAU,iBACZR,EAAMiB,KACLd,EAAAA,cAAA,KAAGK,UAAU,iBAAiBR,EAAMiB,WAClCI,EACHrB,EAAMkB,MACLf,EAAAA,cAAA,KACEK,UAAW,YACTR,EAAMsB,WAAa,IAAM,sBAG1BtB,EAAMkB,MAAO,UAEdG,EACHrB,EAAMmB,OACLhB,EAAAA,cAAA,KAAGK,UAAU,aAAY,OAAKR,EAAMmB,aAClCE,IAGRlB,EAAAA,cAAA,OAAKK,UAAU,qBACbL,EAAAA,cAAA,OACEK,UAAU,iBACVe,wBAAyB,CAAEC,OAAQxB,EAAMoB,SAG3CpB,EAAMoB,KACNjB,EAAAA,cAAA,OAAKK,UAAU,0DACVP,EAAK,mBAFGoB,QA3BLA,EAkCV,C,qCCtDV,IAV4BI,IAAiD,IAAhD,KAACC,EAAI,gBAACC,EAAe,UAACC,EAAS,UAACpB,GAAUiB,EACnE,OACEtB,EAAAA,cAAA,OAAKK,UAAW,gCAAgCmB,KAAmBnB,KACjEL,EAAAA,cAAA,MAAIK,UAAW,uGAAuGoB,KACnHF,GAEC,C,mFCkFZ,UAnFiBD,IAAoB,IAAnB,YAACI,GAAYJ,EAC7B,MACEK,YAAY,OAAEC,IACZF,EAEEG,GAAOC,EAAAA,EAAAA,gBAAe,cAgClBC,GAAiBC,EAAAA,EAAAA,UACrB,IACEH,EAAKI,OAAOC,MAAMC,QAChB,CAACC,EAAUC,KACT,MACMC,EADcC,OAAOC,KAAKJ,GACAK,SAASJ,EAAEK,YAAYC,SAAmC,KAAxBN,EAAEK,YAAYC,QAEhF,OADIL,IAAYF,EAASE,GAAcD,GAChCD,CAAQ,GAEjB,CAAC,IAEL,CAACP,IAIL,OACE7B,EAAAA,cAAC4C,EAAAA,EAAM,CAACC,KAAK,WAAWjB,OAAQA,GAC9B5B,EAAAA,cAAA,WAASK,UAAU,WACjBL,EAAAA,cAAC8C,EAAAA,EAAmB,CAClBvB,KAAK,WACLC,gBAAgB,UAChBC,UAAU,QACVpB,UAAU,SAEZL,EAAAA,cAAA,OAAK+C,MAAM,wBACRR,OAAOS,OAAOjB,GAAgBkB,KAAKC,GAClClD,EAAAA,cAAA,OACEK,UAAU,2EACVC,IAAK4C,EAAaC,IAEhBnD,EAAAA,cAACoD,EAAAA,EACC,CACAtD,KAAMoD,EAAaR,YAAY5C,KAC/BS,MACE2C,EAAaR,YAAYnC,MAAM8C,gBAC5BC,uBAOV,C","sources":["webpack://c4dm-website/./src/components/blogCard.js","webpack://c4dm-website/./src/components/parallelogramHeader.js","webpack://c4dm-website/./src/pages/partners.js"],"sourcesContent":["import { Link } from \"gatsby\";\nimport { GatsbyImage, StaticImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\n\nconst BlogCard = (props) => {\n  // define if link is internal or external\n  const link = props.link \n    ? (content) => (<a href={props.link}>{content}</a>) \n    : (content) => (<Link to={props.slug ? `${props.slug}/#header` : \"/research/projects/\"}>{content}</Link>);\n  \n  return (\n    <div\n      className=\"card is-flex is-flex-direction-column is-flex-grow-1\"\n      key={props.slug}\n    >\n      <div className=\"card-image\">\n        {link(\n          <figure className=\"image\">\n            {props.image ? (\n              <GatsbyImage alt=\"picture of event\" image={props.image} />\n            ) : (\n              <StaticImage\n                alt=\"default event picture as no event picture was specified\"\n                src=\"../../static/defaultevent.png\"\n              />\n            )}\n          </figure>\n        )}\n      </div>\n\n      {!props.date &&\n      !props.title &&\n      !props.author &&\n      !props.html ? undefined : (\n        <div className=\"card-content is-flex is-flex-direction-column is-flex-grow-1\">\n          <div className=\"media is-flex-grow-1\">\n            <div className=\"media-content\">\n              {props.date ? (\n                <p className=\"subtitle is-7\">{props.date}</p>\n              ) : undefined}\n              {props.title ? (\n                <p\n                  className={`title is-${\n                    props.largeTitle ? \"4\" : \"6\"\n                  } is-capitalized`}\n                >\n                  {props.title}{\" \"}\n                </p>\n              ) : undefined}\n              {props.author ? (\n                <p className=\"is-size-7\"> by {props.author}</p>\n              ) : undefined}\n            </div>\n          </div>\n          <div className=\"content is-size-7\">\n            <div\n              className=\"blog-card-text\"\n              dangerouslySetInnerHTML={{ __html: props.html }}\n            ></div>\n          </div>\n          {!props.html ? undefined : (\n            <div className=\"card-footer p-2 has-text-centered is-align-self-center\">\n                {link(\"Read More\")}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BlogCard;\n","import React from \"react\";\n\n\nconst ParallelogramHeader = ({text,backgroundColor,textColor,className}) => {\n    return (\n      <div className={`parallelogram has-background-${backgroundColor} ${className}`}>\n        <h1 className={`is-size-2-desktop is-size-3-tablet is-size-4-mobile has-text-centered has-text-weight-bold has-text-${textColor}`}>\n          {text}\n        </h1>\n      </div>\n    );\n}\n\nexport default ParallelogramHeader;","import React, {useMemo, useEffect} from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport BlogCard from \"../components/blogCard\";\nimport ParallelogramHeader from \"../components/parallelogramHeader\";\nimport \"../style/bulmacustom.scss\"\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nconst Partners = ({pageContext}) => {\n  const {\n    breadcrumb: { crumbs },\n  } = pageContext\n\n  const data = useStaticQuery(graphql`\n      {\n        active: allMarkdownRemark(\n          filter: {\n            fields: { category: { eq: \"partners\" } }\n            frontmatter: { status: { eq: \"active\" } }\n          }\n          sort: { frontmatter: { date: DESC } }\n          limit: 400\n        ) {\n          nodes {\n            frontmatter {\n              partner\n              image {\n                childImageSharp {\n                  gatsbyImageData(\n                    layout: CONSTRAINED\n                    aspectRatio: 1\n                    backgroundColor: \"transparent\"\n                    transformOptions: { fit: CONTAIN }\n                  )\n                }\n              }\n              title\n              link\n            }\n            id\n          }\n        }\n      }\n    `);\n\n      const uniquePartners = useMemo(\n        () =>\n          data.active.nodes.reduce(\n            (partners, e) => {\n              const partnerKeys = Object.keys(partners);\n              const newPartner = !partnerKeys.includes(e.frontmatter.partner) ? e.frontmatter.partner : null;\n              if (newPartner) partners[newPartner] = e;\n              return partners;\n            },\n            {}\n          ),\n        [data]\n      );\n\n    \n    return (\n      <Layout name=\"Partners\" crumbs={crumbs}>\n        <section className=\"section\">\n          <ParallelogramHeader\n            text=\"Partners\"\n            backgroundColor=\"primary\"\n            textColor=\"white\"\n            className=\"mb-6\"\n          />\n          <div class=\"columns is-multiline\">\n            {Object.values(uniquePartners).map((partnerentry) => (\n              <div\n                className=\"column is-one-quarter-desktop is-one-third-tablet is-full-mobile is-flex\"\n                key={partnerentry.id}\n              >\n                  <BlogCard\n                    // title={partnerentry.frontmatter.title}\n                    link={partnerentry.frontmatter.link}\n                    image={\n                      partnerentry.frontmatter.image.childImageSharp\n                        .gatsbyImageData\n                    }\n                  />\n              </div>\n            ))}\n          </div>\n        </section>\n      </Layout>\n    );\n}\n\nexport default Partners;"],"names":["props","link","content","React","href","Link","to","slug","className","key","image","GatsbyImage","alt","StaticImage","src","__imageData","require","date","title","author","html","undefined","largeTitle","dangerouslySetInnerHTML","__html","_ref","text","backgroundColor","textColor","pageContext","breadcrumb","crumbs","data","useStaticQuery","uniquePartners","useMemo","active","nodes","reduce","partners","e","newPartner","Object","keys","includes","frontmatter","partner","Layout","name","ParallelogramHeader","class","values","map","partnerentry","id","BlogCard","childImageSharp","gatsbyImageData"],"sourceRoot":""}