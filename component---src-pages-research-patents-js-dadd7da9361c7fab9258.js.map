{"version":3,"file":"component---src-pages-research-patents-js-dadd7da9361c7fab9258.js","mappings":"+HAaA,IAV4BA,IAAiD,IAAhD,KAACC,EAAI,gBAACC,EAAe,UAACC,EAAS,UAACC,GAAUJ,EACnE,OACEK,EAAAA,cAAA,OAAKD,UAAW,gCAAgCF,KAAmBE,KACjEC,EAAAA,cAAA,MAAID,UAAW,uGAAuGD,KACnHF,GAEC,C,qCC+BZ,IAtCmBK,IACf,MAAMC,EAASC,OAAOC,KAAKH,GAAOC,OAClC,OACEF,EAAAA,cAAA,OAAKD,UAAU,2BACbC,EAAAA,cAAA,OACED,UAAW,qBACTG,EAAS,EAAI,eAAiB,4BAGhCF,EAAAA,cAAA,OAAKD,UAAU,SACbC,EAAAA,cAAA,OAAKD,UAAU,iBAAiBE,EAAMI,SAGzCH,EAAS,EACRF,EAAAA,cAAA,OACED,UAAW,uBACTG,EAAS,EAAI,eAAiB,mCAGhCF,EAAAA,cAAA,OAAKD,UAAU,SACbC,EAAAA,cAAA,OAAKD,UAAU,iBAAiBE,EAAMK,eAGxCC,EACHL,EAAS,EACRF,EAAAA,cAAA,OAAKD,UAAU,sDACbC,EAAAA,cAAA,OAAKD,UAAU,SACXC,EAAAA,cAAA,OAAKD,UAAU,iBACVE,EAAMO,cAIfD,EACA,C,oFCoDZ,UAtEgBZ,IAAoB,IAAnB,YAACc,GAAYd,EAC5B,MACEe,YAAY,OAAEC,IACZF,EACIG,GAAOC,EAAAA,EAAAA,gBAAe,aAgC5B,OACEb,EAAAA,cAACc,EAAAA,EAAM,CAACC,KAAK,UAAUJ,OAAQA,GAC7BX,EAAAA,cAAA,WAASD,UAAU,WACjBC,EAAAA,cAACgB,EAAAA,EAAmB,CAClBpB,KAAK,UACLC,gBAAgB,UAChBC,UAAU,QACVC,UAAU,SAEZC,EAAAA,cAAA,OACED,UAAU,UACVkB,wBAAyB,CAAEC,OAAQN,EAAKO,MAAMC,QAG/CR,EAAKS,OAAOC,MAAMC,KAAKC,IACtBxB,SAAAA,cAACyB,EAAAA,KAAI,CAACC,GAAIF,EAAYG,YAAYC,MAChC5B,EAAAA,cAAA,OACE6B,MAAM,sCACNC,IAAKN,EAAYO,IAEjB/B,EAAAA,cAACgC,EAAAA,EAAS,CACR3B,OAjEG4B,EAkEDT,EAAYG,YAAYM,MAlEhBC,EAmERV,EAAYG,YAAYQ,MAnEJC,EAmEWZ,EAAYG,YAAYU,MAlEvErC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,KAAGD,UAAU,cAAckC,GAAS,OAAO,KAC3CjC,EAAAA,cAAA,KAAGD,UAAU,QAAO,gBAAcmC,GAAc,OAAO,KACvDlC,EAAAA,cAAA,SAAG,uBAAqBoC,SAJVE,IAACL,EAAOC,EAAYE,CAwE7B,KAEI,C","sources":["webpack://c4dm-website/./src/components/parallelogramHeader.js","webpack://c4dm-website/./src/components/tableCard.js","webpack://c4dm-website/./src/pages/research/patents.js"],"sourcesContent":["import React from \"react\";\n\n\nconst ParallelogramHeader = ({text,backgroundColor,textColor,className}) => {\n    return (\n      <div className={`parallelogram has-background-${backgroundColor} ${className}`}>\n        <h1 className={`is-size-2-desktop is-size-3-tablet is-size-4-mobile has-text-centered has-text-weight-bold has-text-${textColor}`}>\n          {text}\n        </h1>\n      </div>\n    );\n}\n\nexport default ParallelogramHeader;","import React from \"react\";\n\nconst TableCard = (props) => {\n    const length = Object.keys(props).length;\n    return (\n      <div className=\"card table-card columns\">\n        <div\n          className={`card-image column ${\n            length > 1 ? \"is-2-desktop\" : \"is-full\" //is 2 6ths\n          } is-full-mobile`}\n        >\n          <div className=\"media\">\n            <div className=\"media-content\">{props.first}</div>\n          </div>\n        </div>\n        {length > 1 ? (\n          <div\n            className={`card-content column ${\n              length > 2 ? \"is-one-fifth\" : \"is-four-fifths\"\n            } is-full-mobile`}\n          >\n            <div className=\"media\">\n              <div className=\"media-content\">{props.second}</div>\n            </div>\n          </div>\n        ) : undefined}\n        {length > 2 ? (\n          <div className=\"card-content column is-three-fifths is-full-mobile\">\n            <div className=\"media\">\n                <div className=\"media-content\">\n                    {props.third}\n                </div>\n            </div>\n          </div>\n        ) : undefined}\n      </div>\n    );\n\n}\n\nexport default TableCard;","import React from \"react\";\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\nimport Layout from \"../../components/layout\";\nimport TableCard from \"../../components/tableCard\";\nimport ParallelogramHeader from \"../../components/parallelogramHeader\";\nimport \"../../style/bulmacustom.scss\"\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\n// Return structured content for table card\nconst firstColumn = (title, filingDate, applicationNumber) => (\n    <>\n      <p className=\"title is-6\">{title || \"Name\"} </p>\n      <p className=\"is-3\">Filing Date: {filingDate || \"Date\"} </p>\n      <p>Application Number: {applicationNumber}</p>\n    </>\n);\n\nconst Patents = ({pageContext}) => {\n  const {\n    breadcrumb: { crumbs },\n  } = pageContext\n    const data = useStaticQuery(graphql`\n      {\n        active: allMarkdownRemark(\n          filter: { fields: { category: { eq: \"research/patents/projects\" } } }\n          sort: { frontmatter: { date: DESC } }\n        ) {\n          nodes {\n            frontmatter {\n              image {\n                childImageSharp {\n                  gatsbyImageData(layout: CONSTRAINED)\n                }\n              }\n              title\n              begin\n              grant\n              link\n            }\n            id\n          }\n        }\n\n      \n        about: markdownRemark(\n            fields: { category: { eq: \"research/patents\" } }\n            fileAbsolutePath: { regex: \"/about.md/\" }\n          ) {\n          html\n        }\n      }\n    `);\n\n    return (\n      <Layout name=\"Patents\" crumbs={crumbs}>\n        <section className=\"section\">\n          <ParallelogramHeader\n            text=\"Patents\"\n            backgroundColor=\"primary\"\n            textColor=\"white\"\n            className=\"mb-6\"\n          />\n          <div\n            className=\"content\"\n            dangerouslySetInnerHTML={{ __html: data.about.html }}\n          ></div>\n\n          {data.active.nodes.map((patentEntry) => (\n            <Link to={patentEntry.frontmatter.link}>\n              <div\n                class=\"card-image row is-three-fifths pt-3\"\n                key={patentEntry.id}\n              >\n                <TableCard\n                  first={firstColumn(\n                    patentEntry.frontmatter.title,\n                    patentEntry.frontmatter.begin, patentEntry.frontmatter.grant\n                  )}\n                />\n              </div>\n            </Link>\n          ))}\n        </section>\n      </Layout>\n    );\n}\n\nexport default Patents;"],"names":["_ref","text","backgroundColor","textColor","className","React","props","length","Object","keys","first","second","undefined","third","pageContext","breadcrumb","crumbs","data","useStaticQuery","Layout","name","ParallelogramHeader","dangerouslySetInnerHTML","__html","about","html","active","nodes","map","patentEntry","Link","to","frontmatter","link","class","key","id","TableCard","title","filingDate","begin","applicationNumber","grant","firstColumn"],"sourceRoot":""}