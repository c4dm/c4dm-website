{"version":3,"file":"component---src-pages-archive-js-3ff9ca4ce92a3698f7ab.js","mappings":"+HAaA,IAV4BA,IAAiD,IAAhD,KAACC,EAAI,gBAACC,EAAe,UAACC,EAAS,UAACC,GAAUJ,EACnE,OACEK,EAAAA,cAAA,OAAKD,UAAS,gCAAkCF,EAAe,IAAIE,GACjEC,EAAAA,cAAA,MAAID,UAAS,uGAAyGD,GACnHF,GAEC,C,qCC+BZ,IAtCmBK,IACf,MAAMC,EAASC,OAAOC,KAAKH,GAAOC,OAClC,OACEF,EAAAA,cAAA,OAAKD,UAAU,2BACbC,EAAAA,cAAA,OACED,UAAS,sBACPG,EAAS,EAAI,eAAiB,WAAU,mBAG1CF,EAAAA,cAAA,OAAKD,UAAU,SACbC,EAAAA,cAAA,OAAKD,UAAU,iBAAiBE,EAAMI,SAGzCH,EAAS,EACRF,EAAAA,cAAA,OACED,UAAS,wBACPG,EAAS,EAAI,eAAiB,kBAAgB,mBAGhDF,EAAAA,cAAA,OAAKD,UAAU,SACbC,EAAAA,cAAA,OAAKD,UAAU,iBAAiBE,EAAMK,eAGxCC,EACHL,EAAS,EACRF,EAAAA,cAAA,OAAKD,UAAU,sDACbC,EAAAA,cAAA,OAAKD,UAAU,SACXC,EAAAA,cAAA,OAAKD,UAAU,iBACVE,EAAMO,cAIfD,EACA,C,oFCsCZ,UArDgBZ,IAAoB,IAAnB,YAACc,GAAYd,EAC5B,MACEe,YAAY,OAAEC,IACZF,EAEEG,GAAOC,EAAAA,EAAAA,gBAAe,cAkB5B,OACEb,EAAAA,cAACc,EAAAA,EAAM,CAACC,KAAK,UAAUJ,OAAQA,GAC7BX,EAAAA,cAAA,WAASD,UAAU,WACjBC,EAAAA,cAACgB,EAAAA,EAAmB,CAClBpB,KAAK,UACLC,gBAAgB,UAChBC,UAAU,QACVC,UAAU,SAGZC,EAAAA,cAAA,KAAGD,UAAU,mBAAkB,mBAE9Ba,EAAKK,QAAQC,MAAMC,KAAKC,IACvBpB,SAAAA,cAAA,OACED,UAAU,sCACVsB,IAAKD,EAAME,IAEXtB,EAAAA,cAACuB,EAAAA,KAAI,CAACC,GAAIJ,EAAMK,OAAOC,MACrB1B,EAAAA,cAAC2B,EAAAA,EAAS,CACRtB,MArDU,KAsDVC,QApDMsB,EAoDeR,EAAMS,YAAYD,MAnDnD5B,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,KAAGD,UAAU,cAAc6B,GAAS,YAAY,KAChD5B,EAAAA,cAAA,OAAKD,UAAU,0DAAyD,mBAHxD6B,KAwDb,KAEI,C","sources":["webpack://c4dm-website/./src/components/parallelogramHeader.js","webpack://c4dm-website/./src/components/tableCard.js","webpack://c4dm-website/./src/pages/archive.js"],"sourcesContent":["import React from \"react\";\n\n\nconst ParallelogramHeader = ({text,backgroundColor,textColor,className}) => {\n    return (\n      <div className={`parallelogram has-background-${backgroundColor} ${className}`}>\n        <h1 className={`is-size-2-desktop is-size-3-tablet is-size-4-mobile has-text-centered has-text-weight-bold has-text-${textColor}`}>\n          {text}\n        </h1>\n      </div>\n    );\n}\n\nexport default ParallelogramHeader;","import React from \"react\";\n\nconst TableCard = (props) => {\n    const length = Object.keys(props).length;\n    return (\n      <div className=\"card table-card columns\">\n        <div\n          className={`card-image column ${\n            length > 1 ? \"is-2-desktop\" : \"is-full\" //is 2 6ths\n          } is-full-mobile`}\n        >\n          <div className=\"media\">\n            <div className=\"media-content\">{props.first}</div>\n          </div>\n        </div>\n        {length > 1 ? (\n          <div\n            className={`card-content column ${\n              length > 2 ? \"is-one-fifth\" : \"is-four-fifths\"\n            } is-full-mobile`}\n          >\n            <div className=\"media\">\n              <div className=\"media-content\">{props.second}</div>\n            </div>\n          </div>\n        ) : undefined}\n        {length > 2 ? (\n          <div className=\"card-content column is-three-fifths is-full-mobile\">\n            <div className=\"media\">\n                <div className=\"media-content\">\n                    {props.third}\n                </div>\n            </div>\n          </div>\n        ) : undefined}\n      </div>\n    );\n\n}\n\nexport default TableCard;","import \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\nimport React from \"react\";\nimport Layout from \"../components/layout\";\nimport ParallelogramHeader from \"../components/parallelogramHeader\";\nimport TableCard from \"../components/tableCard\";\nimport \"../style/bulmacustom.scss\";\n\n// Return structured content for table card\nconst firstColumn = () => null; // No date, so we return null\n\nconst secondColumn = (title) => (\n    <>               \n      <p className=\"title is-4\">{title || \"New Entry\"} </p>\n      <div className=\"card-footer p-2 has-text-centered is-align-self-center\">\n        Read More\n      </div>\n    </>\n);\n\nconst Archive = ({pageContext}) => {\n  const {\n    breadcrumb: { crumbs },\n  } = pageContext;\n\n  const data = useStaticQuery(graphql`\n  {\n    archive: allMarkdownRemark(\n      filter: {fields: {category: {eq: \"archive\"}}}\n    ) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n        }\n        id\n      }\n    }\n  }\n  `);\n\n  return (\n    <Layout name=\"Archive\" crumbs={crumbs}>\n      <section className=\"section\">\n        <ParallelogramHeader\n          text=\"Archive\"\n          backgroundColor=\"primary\"\n          textColor=\"white\"\n          className=\"mb-6\"\n        />\n\n        <p className=\"title is-4 pt-5\">Archive Entries</p>\n\n        {data.archive.nodes.map((entry) => (\n          <div\n            className=\"card-image row is-three-fifths pt-3\"\n            key={entry.id}\n          >\n            <Link to={entry.fields.slug}>\n              <TableCard\n                first={firstColumn()}\n                second={secondColumn(entry.frontmatter.title)}\n              />\n            </Link>\n          </div>\n        ))}\n      </section>\n    </Layout>\n  );\n};\n\nexport default Archive;"],"names":["_ref","text","backgroundColor","textColor","className","React","props","length","Object","keys","first","second","undefined","third","pageContext","breadcrumb","crumbs","data","useStaticQuery","Layout","name","ParallelogramHeader","archive","nodes","map","entry","key","id","Link","to","fields","slug","TableCard","title","frontmatter"],"sourceRoot":""}